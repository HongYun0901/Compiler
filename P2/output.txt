declare an id to objet type
 boolean value
value 
VAL ID ASSIGN EXPR
 boolean value
value 
VAR ID ASSIGN EXPR
 boolean value
value 
VAR ID : DATA_TYPE ASSIGN EXPR
int value
value 
VAR ID ASSIGN EXPR
VAR ID ':' DATA_TYPE
'c' 
 char value
value 
VAR ID ASSIGN EXPR
string value
value 
VAR ID ASSIGN EXPR
 boolean value
value 
VAL ID ASSIGN EXPR
VAR ID : DATA_TYPE [ INT_VALUE ]
create an function id
method id is correct
ID : DataType
when arg table top is1
ID : DataType
when arg table top is1
ID : DataType
when arg table top is1
ID : DataType
when arg table top is1
ID : DataType
when arg table top is1
ARG
ARG , ARGS
ARG , ARGS
ARG , ARGS
ARG , ARGS
: DataType
BLOCK START
ID
Warning: b has not init
BLOCK START
ID
Warning: i has not init
int value
value 
EXPR + EXPR
ID ASSIGN EXPR
ID
int value
value 
EXPR - EXPR
ID ASSIGN EXPR
ID
int value
value 
EXPR LT EXPR
BLOCK START
ID
int value
value 
EXPR / EXPR
ID ASSIGN EXPR
ID
int value
value 
EXPR * EXPR
ID ASSIGN EXPR
BLOCK END
--------------dump--------------
----------index:1-----------
id: False	type: const
id: True	type: const
id: axottest	type: object
id: ba	type: variable
id: bb	type: variable
id: ca	type: variable
id: correct	type: function
id: fabtable	type: array
id: ia	type: variable
id: ib	type: variable
id: sa	type: variable
----------------------------
----------index:2-----------
id: b	type: variable
id: c	type: variable
id: i	type: variable
id: s	type: variable
id: test	type: variable
----------------------------
--------------------------------
ID
Warning: s has not init
string value
value 
EXPR EQ EXPR
ID
Warning: s has not init
ID
Warning: s has not init
EXPR EQ EXPR
ID
Warning: s has not init
ID
Warning: s has not init
EXPR NE EXPR
NOT EXPR
EXPR AND_OP EXPR
EXPR OR_OP EXPR
BLOCK START
'b' 
 char value
value 
ID ASSIGN EXPR
BLOCK END
--------------dump--------------
----------index:1-----------
id: False	type: const
id: True	type: const
id: axottest	type: object
id: ba	type: variable
id: bb	type: variable
id: ca	type: variable
id: correct	type: function
id: fabtable	type: array
id: ia	type: variable
id: ib	type: variable
id: sa	type: variable
----------------------------
----------index:2-----------
id: b	type: variable
id: c	type: variable
id: i	type: variable
id: s	type: variable
id: test	type: variable
----------------------------
--------------------------------
BLOCK START
'c' 
 char value
value 
ID ASSIGN EXPR
BLOCK END
--------------dump--------------
----------index:1-----------
id: False	type: const
id: True	type: const
id: axottest	type: object
id: ba	type: variable
id: bb	type: variable
id: ca	type: variable
id: correct	type: function
id: fabtable	type: array
id: ia	type: variable
id: ib	type: variable
id: sa	type: variable
----------------------------
----------index:2-----------
id: b	type: variable
id: c	type: variable
id: i	type: variable
id: s	type: variable
id: test	type: variable
----------------------------
--------------------------------
BLOCK END
--------------dump--------------
----------index:1-----------
id: False	type: const
id: True	type: const
id: axottest	type: object
id: ba	type: variable
id: bb	type: variable
id: ca	type: variable
id: correct	type: function
id: fabtable	type: array
id: ia	type: variable
id: ib	type: variable
id: sa	type: variable
----------------------------
----------index:2-----------
id: b	type: variable
id: c	type: variable
id: i	type: variable
id: s	type: variable
id: test	type: variable
----------------------------
--------------------------------
 while with block
int value
value 
int value
value 
BLOCK START
 boolean value
value 
ID ASSIGN EXPR
ID
 boolean value
value 
EXPR GE EXPR
error at line: 33 (EXPR GE EXPR TYPE ERROR)
BLOCK START
 boolean value
value 
ID ASSIGN EXPR
BLOCK END
--------------dump--------------
----------index:1-----------
id: False	type: const
id: True	type: const
id: axottest	type: object
id: ba	type: variable
id: bb	type: variable
id: ca	type: variable
id: correct	type: function
id: fabtable	type: array
id: ia	type: variable
id: ib	type: variable
id: sa	type: variable
----------------------------
----------index:2-----------
id: b	type: variable
id: c	type: variable
id: i	type: variable
id: s	type: variable
id: test	type: variable
----------------------------
--------------------------------
ID
int value
value 
EXPR LE EXPR
int value
value 
ID ASSIGN EXPR
--------------dump--------------
----------index:1-----------
id: False	type: const
id: True	type: const
id: axottest	type: object
id: ba	type: variable
id: bb	type: variable
id: ca	type: variable
id: correct	type: function
id: fabtable	type: array
id: ia	type: variable
id: ib	type: variable
id: sa	type: variable
----------------------------
----------index:2-----------
id: b	type: variable
id: c	type: variable
id: i	type: variable
id: s	type: variable
id: test	type: variable
----------------------------
--------------------------------
BLOCK END
--------------dump--------------
----------index:1-----------
id: False	type: const
id: True	type: const
id: axottest	type: object
id: ba	type: variable
id: bb	type: variable
id: ca	type: variable
id: correct	type: function
id: fabtable	type: array
id: ia	type: variable
id: ib	type: variable
id: sa	type: variable
----------------------------
----------index:2-----------
id: b	type: variable
id: c	type: variable
id: i	type: variable
id: s	type: variable
id: test	type: variable
----------------------------
--------------------------------
for stmt with block
ID
Warning: s has not init
BLOCK END
--------------dump--------------
----------index:1-----------
id: False	type: const
id: True	type: const
id: axottest	type: object
id: ba	type: variable
id: bb	type: variable
id: ca	type: variable
id: correct	type: function
id: fabtable	type: array
id: ia	type: variable
id: ib	type: variable
id: sa	type: variable
----------------------------
----------index:2-----------
id: b	type: variable
id: c	type: variable
id: i	type: variable
id: s	type: variable
id: test	type: variable
----------------------------
--------------------------------
declare method end
correct$8string
correct in declare  return type is string
correctin declare0x7ffee94b59b0
correct$8string
size check : 5
id : test type : int
id : b type : bool
id : i type : int
id : c type : char
id : s type : string
create an function id
method id is fab
ID : DataType
when arg table top is1
ARG
: DataType
BLOCK START
ID
Warning: n has not init
ID [ EXPR ]
int value
value 
- EXPR
EXPR NE EXPR
BLOCK START
ID
Warning: n has not init
ID [ EXPR ]
BLOCK END
--------------dump--------------
----------index:1-----------
id: False	type: const
id: True	type: const
id: axottest	type: object
id: ba	type: variable
id: bb	type: variable
id: ca	type: variable
id: correct	type: function
id: fab	type: function
id: fabtable	type: array
id: ia	type: variable
id: ib	type: variable
id: sa	type: variable
----------------------------
----------index:2-----------
id: n	type: variable
----------------------------
--------------------------------
ID
Warning: n has not init
int value
value 
EXPR LT EXPR
BLOCK START
ID
Warning: n has not init
ID
Warning: n has not init
ID '[' EXPR ']' ASSIGN EXPR
BLOCK END
--------------dump--------------
----------index:1-----------
id: False	type: const
id: True	type: const
id: axottest	type: object
id: ba	type: variable
id: bb	type: variable
id: ca	type: variable
id: correct	type: function
id: fab	type: function
id: fabtable	type: array
id: ia	type: variable
id: ib	type: variable
id: sa	type: variable
----------------------------
----------index:2-----------
id: n	type: variable
----------------------------
--------------------------------
BLOCK START
ID
Warning: n has not init
ID
Warning: n has not init
int value
value 
EXPR - EXPR
check arugment start
call function invocation
fabin invocation0x7ffee94b5928
parameter nums : 1
type : int
1 1
fab return type is :unknown
ID
Warning: n has not init
int value
value 
EXPR - EXPR
check arugment start
call function invocation
fabin invocation0x7ffee94b5928
parameter nums : 1
type : int
1 1
fab return type is :unknown
EXPR + EXPR
Warning: beside operator may have unknownType
ID '[' EXPR ']' ASSIGN EXPR
error at line: 54 (assign different value type in array)
BLOCK END
--------------dump--------------
----------index:1-----------
id: False	type: const
id: True	type: const
id: axottest	type: object
id: ba	type: variable
id: bb	type: variable
id: ca	type: variable
id: correct	type: function
id: fab	type: function
id: fabtable	type: array
id: ia	type: variable
id: ib	type: variable
id: sa	type: variable
----------------------------
----------index:2-----------
id: n	type: variable
----------------------------
--------------------------------
ID
Warning: n has not init
ID [ EXPR ]
BLOCK END
--------------dump--------------
----------index:1-----------
id: False	type: const
id: True	type: const
id: axottest	type: object
id: ba	type: variable
id: bb	type: variable
id: ca	type: variable
id: correct	type: function
id: fab	type: function
id: fabtable	type: array
id: ia	type: variable
id: ib	type: variable
id: sa	type: variable
----------------------------
----------index:2-----------
id: n	type: variable
----------------------------
--------------------------------
declare method end
fab$8int
fab in declare  return type is int
fabin declare0x7ffee94b59b0
fab$8int
size check : 1
id : n type : int
create an function id
method id is main
ARGS empty
BLOCK START
int value
value 
VAR ID ASSIGN EXPR
int value
value 
int value
value 
ID
int value
value 
- EXPR
ID '[' EXPR ']' ASSIGN EXPR
--------------dump--------------
----------index:1-----------
id: False	type: const
id: True	type: const
id: axottest	type: object
id: ba	type: variable
id: bb	type: variable
id: ca	type: variable
id: correct	type: function
id: fab	type: function
id: fabtable	type: array
id: ia	type: variable
id: ib	type: variable
id: main	type: function
id: sa	type: variable
----------------------------
----------index:2-----------
id: i	type: variable
----------------------------
--------------------------------
for stmt without block
ID
ID
ID
ID
ID
Warning: ib has not init
check arugment start
checking argument...
checking argument...
checking argument...
checking argument...
call function invocation
correctin invocation0x7ffee94b5928
parameter nums : 5
type : int
type : bool
type : int
type : char
type : string
5 5
correct return type is :string
ID ASSIGN EXPR
int value
value 
check arugment start
call function invocation
fabin invocation0x7ffee94b5928
parameter nums : 1
type : int
1 1
fab return type is :int
BLOCK END
--------------dump--------------
----------index:1-----------
id: False	type: const
id: True	type: const
id: axottest	type: object
id: ba	type: variable
id: bb	type: variable
id: ca	type: variable
id: correct	type: function
id: fab	type: function
id: fabtable	type: array
id: ia	type: variable
id: ib	type: variable
id: main	type: function
id: sa	type: variable
----------------------------
----------index:2-----------
id: i	type: variable
----------------------------
--------------------------------
declare method end
main$8unknown
mainin declare0x7ffee94b59b0
main$8unknown
size check : 0
OBJECT ID BLOCK
Parsing Success 
--------------dump--------------
----------index:1-----------
id: False	type: const
id: True	type: const
id: axottest	type: object
id: ba	type: variable
id: bb	type: variable
id: ca	type: variable
id: correct	type: function
id: fab	type: function
id: fabtable	type: array
id: ia	type: variable
id: ib	type: variable
id: main	type: function
id: sa	type: variable
----------------------------
--------------------------------
